<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <SolidColorBrush x:Key="DropDownBorderBrush"  Color="#0e1116" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF7CF1FF" Opacity="0.2"/>

    <ImageBrush x:Key="ButtonNormal"   ImageSource="/Images/Combobox/下拉菜单_按钮_正常.png" Stretch="Fill"  TileMode="None" AlignmentX="Center"  AlignmentY="Center" />
    <ImageBrush x:Key="ButtonMouseOver"   ImageSource="/Images/Combobox/下拉菜单_按钮_悬浮.png" Stretch="Fill"  TileMode="None" AlignmentX="Center"  AlignmentY="Center" />
    <ImageBrush x:Key="ButtonMouseDown"   ImageSource="/Images/Combobox/下拉菜单_按钮_点击.png" Stretch="Fill"  TileMode="None" AlignmentX="Center"  AlignmentY="Center" />

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Background="{StaticResource ButtonNormal}" x:Name="border"  BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <!--<Border BorderBrush="Red" BorderThickness="2" CornerRadius="4">
            </Border>-->
                <Border Grid.Column="0"/>
                <Border Grid.Column="1"/>
                <Border Grid.Column="2"/>
                <!--<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="WhiteSmoke" />-->
                <Image Grid.Column="1" Width="2" Height="35" Source="/Images/Combobox/下拉菜单_分隔线.png"/>
                <Image Grid.Column="2" Width="11" Height="6" Source="/Images/Combobox/下拉菜单_小三角.png"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border"  Value="{StaticResource ButtonMouseOver}"/>
            </Trigger>
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"  />
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                        <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent"  IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Width="250"
                               x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                  MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Width="100" Margin="50,0,0,0"
                                        Background="{DynamicResource DropDownBorderBrush}" 
                                        BorderBrush="{DynamicResource SolidBorderBrush}" 
                                        BorderThickness="1"/>
                                <ScrollViewer Margin="2" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="#36455c"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="contentCenterStyle"
               TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White"/>
    </Style>
</ResourceDictionary>