<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ctrl="clr-namespace:Itenso.Solutions.Community.CommandDemo"
	xmlns:cmd="clr-namespace:Itenso.Windows.Input;assembly=Itenso.Windows.Input"
	xmlns:appCmd="clr-namespace:Itenso.Solutions.Community.Commands.Application;assembly=Itenso.Solutions.Community.Commands"
	xmlns:editCmd="clr-namespace:Itenso.Solutions.Community.Commands.Editor;assembly=Itenso.Solutions.Community.Commands"
	x:Class="Itenso.Solutions.Community.CommandDemo.CommandWindow"
	x:Name="EditorWindow"
	Title="WPF Command-Pattern Applied - Editor Example"
	WindowStartupLocation="CenterScreen"
	ResizeMode="CanResizeWithGrip"
	Icon="Editor.ico"
	Width="800"
	Height="600">

	<Window.Resources>
		<Style
			TargetType="{x:Type MenuItem}"
			x:Key="{x:Type MenuItem}">
			<EventSetter
				Event="GotFocus"
				Handler="OnStatusUpdate" />
			<EventSetter
				Event="LostFocus"
				Handler="OnStatusReset" />
		</Style>
		<Style
			TargetType="{x:Type cmd:MenuItemImage}">
			<Setter
				Property="Width"
				Value="16" />
			<Setter
				Property="Height"
				Value="16" />
		</Style>
		<Style
			TargetType="{x:Type cmd:ButtonImage}">
			<Setter
				Property="Width"
				Value="15" />
			<Setter
				Property="Height"
				Value="15" />
		</Style>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="Auto" />
			<RowDefinition
				Height="Auto" />
			<RowDefinition />
			<RowDefinition
				Height="Auto" />
		</Grid.RowDefinitions>

		<Menu
			x:Name="MainMenu"
			Grid.Row="0">
			<MenuItem
				Header="File">
				<MenuItem
					Header="Exit"
					cmd:MenuItemCommandProvider.Command="{x:Static appCmd:ApplicationCommands.ApplicationShutdown}" />
			</MenuItem>
			<MenuItem
				Header="Edit">
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.EditUndo}" />
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.EditRedo}" />
			</MenuItem>
			<MenuItem
				Header="Format">
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.ToggleBold}" />
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.ToggleItalic}" />
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.ToggleUnderline}" />
				<Separator />
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.IncreaseFontSize}" />
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.DecreaseFontSize}" />
			</MenuItem>
			<MenuItem
				Header="Help">
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static appCmd:ApplicationCommands.CommandStatistics}" />
				<MenuItem
					cmd:MenuItemCommandProvider.Command="{x:Static appCmd:ApplicationCommands.ApplicationAbout}" />
			</MenuItem>
		</Menu>

		<!-- This tool bar contains all the editing buttons. -->
		<ToolBar
			x:Name="MainToolBar"
			Height="26"
			ToolBarTray.IsLocked="true"
			Grid.Row="1">

			<ctrl:CommandComboBox
				x:Name="FontsComboBox"
				Command="{x:Static editCmd:RichTextEditorCommands.ChangeFontFamily}"
				Width="150" />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.ToggleBold}" />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.ToggleItalic}" />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.ToggleUnderline}" />
			<Separator />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.IncreaseFontSize}" />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.DecreaseFontSize}" />
			<Separator />
			<Button
				ToolTip="Bullets"
				CommandTarget="{Binding ElementName=Editor}"
				cmd:ButtonCommandProvider.Command="{x:Static EditingCommands.ToggleBullets}">
				<Image
					Source="pack://application:,,,/Itenso.Solutions.Community.Commands;Component/Images/ToggleBullets.png" />
			</Button>
			<Button
				ToolTip="Numbering"
				CommandTarget="{Binding ElementName=Editor}"
				cmd:ButtonCommandProvider.Command="{x:Static EditingCommands.ToggleNumbering}">
				<Image
					Source="pack://application:,,,/Itenso.Solutions.Community.Commands;Component/Images/ToggleNumbering.png" />
			</Button>
			<Separator />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.IncreaseIndentation}" />
			<Button
				cmd:ButtonCommandProvider.Command="{x:Static editCmd:RichTextEditorCommands.DecreaseIndentation}" />

		</ToolBar>

		<!-- By default pressing tab moves focus to the next control. Setting AcceptsTab to true allows the 
           RichTextBox to accept tab characters. -->
		<RichTextBox
			x:Name="Editor"
			Grid.Row="2"
			AcceptsTab="True"
			HorizontalScrollBarVisibility="Auto"
			VerticalScrollBarVisibility="Auto">

			<FlowDocument>
				<Paragraph
					FontSize="18">Flow Format Example</Paragraph>

				<Paragraph>
					Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy 
      nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi 
      enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis 
      nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure.
				</Paragraph>
				<Paragraph>
					Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh 
      euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim 
      ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl 
      ut aliquip ex ea commodo consequat. Duis autem vel eum iriure.
				</Paragraph>

				<Paragraph
					FontSize="18">More flow elements</Paragraph>
				<Paragraph
					FontSize="15">Inline, font type and weight, and a List</Paragraph>

				<List>
					<ListItem>
						<Paragraph>ListItem 1</Paragraph>
					</ListItem>
					<ListItem>
						<Paragraph>ListItem 2</Paragraph>
					</ListItem>
					<ListItem>
						<Paragraph>ListItem 3</Paragraph>
					</ListItem>
					<ListItem>
						<Paragraph>ListItem 4</Paragraph>
					</ListItem>
					<ListItem>
						<Paragraph>ListItem 5</Paragraph>
					</ListItem>
				</List>

				<Paragraph>
					<Bold>Bolded</Bold>
				</Paragraph>
				<Paragraph>
					<Underline>Underlined</Underline>
				</Paragraph>
				<Paragraph>
					<Bold>
						<Underline>Bolded and Underlined</Underline>
					</Bold>
				</Paragraph>
				<Paragraph>
					<Italic>Italic</Italic>
				</Paragraph>

				<Paragraph>
					<Span>The Span element, no inherent rendering</Span>
				</Paragraph>
				<Paragraph>
					<Run>The Run element, no inherent rendering</Run>
				</Paragraph>

				<Paragraph
					FontSize="15">Subscript, Superscript</Paragraph>

				<Paragraph>
					<Run
						Typography.Variants="Superscript">This text is Superscripted.</Run> This text isn't.
				</Paragraph>
				<Paragraph>
					<Run
						Typography.Variants="Subscript">This text is Subscripted.</Run> This text isn't.
				</Paragraph>
				<Paragraph>
					If a font does not support a particular form (such as Superscript) a default font form will be displayed.
				</Paragraph>

				<Paragraph
					FontSize="15">Blocks, breaks, paragraph</Paragraph>

				<Section>
					<Paragraph>A block section of text</Paragraph>
				</Section>
				<Section>
					<Paragraph>Another block section of text</Paragraph>
				</Section>

				<Paragraph>
					<LineBreak />
				</Paragraph>
				<Section>
					<Paragraph>... and another section, preceded by a LineBreak</Paragraph>
				</Section>

				<Section
					BreakPageBefore="True" />
				<Section>
					<Paragraph>... and another section, preceded by a PageBreak</Paragraph>
				</Section>

				<Paragraph>Finally, a paragraph. Note the break between this paragraph ...</Paragraph>
				<Paragraph
					TextIndent="25">... and this paragraph, and also the left indention.</Paragraph>

				<Paragraph>
					<LineBreak />
				</Paragraph>

			</FlowDocument>
		</RichTextBox>

		<StatusBar
			Grid.Row="3"
			Height="23"
			BorderBrush="Gray"
			BorderThickness="0,1,0,0">
			<StatusBarItem
				Width="200"
				Content="{Binding ElementName=EditorWindow, Path=CurrentCommandInfo}" />
			<StatusBarItem
				Width="120"
				Content="{Binding ElementName=EditorWindow, Path=CommandStatisticInfo}" />
		</StatusBar>

	</Grid>

</Window>