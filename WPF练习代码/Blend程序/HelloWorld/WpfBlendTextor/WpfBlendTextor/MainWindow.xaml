<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d"
	x:Class="WpfBlendTextor.MainWindow"
	x:Name="Window"
	Title="MainWindow"
	Width="640" Height="480">

	<Window.Resources>
		<ImageBrush x:Key="Horizontalslider_backround" ImageSource="/Images/SpeedValueSlider/调节进度条_背景（水平）.png" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center"/>
		<ImageBrush x:Key="Horizontalslider_Thumb" ImageSource="/Images/SpeedValueSlider/调节进度条_按钮（水平）.png" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center"/>
		<ImageBrush x:Key="Verticalslider_Thumb" ImageSource="/Images/SpeedValueSlider/调节进度条_按钮（垂直）.png" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center"/>
		<ImageBrush x:Key="Verticalslider_backround" ImageSource="/Images/SpeedValueSlider/调节进度条_背景（垂直）.png" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center"/>
		
		<LinearGradientBrush x:Key="slider_light" EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="#FF02C6FF" Offset="1"/>
				<GradientStop Color="#FF007CFF"/>
		</LinearGradientBrush>
		<!--上拉时的背景色-->
		 <Style x:Key="Horizontal_UpRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
		 	<Setter Property="Height" Value="8" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="{StaticResource slider_light}" CornerRadius="3,0,0,3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Vertical_UpRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Width" Value="8" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="{StaticResource slider_light}" CornerRadius="3,3,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--下拉时的背景色-->
        <Style x:Key="Horizontal_DownRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        	 <Setter Property="Focusable" Value="false" />
            <Setter Property="Height" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" CornerRadius="3,3,0,0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Vertical_DownRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" CornerRadius="0,0,3,3" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--垂直时的滑块样式-->
        <Style x:Key="Vertical_SliderThumbStyle" TargetType="{x:Type Thumb}">  
		            <Setter Property="SnapsToDevicePixels" Value="True" />  
		            <Setter Property="OverridesDefaultStyle" Value="True" />  
		            <Setter Property="Height" Value="29" />  
		            <Setter Property="Width" Value="38" /> 
					<Setter Property="Background" Value="{DynamicResource Verticalslider_Thumb}"/>
		            <Setter Property="Template">  
		                <Setter.Value>  
		                    <ControlTemplate TargetType="{x:Type Thumb}">  
		                    	<Grid>
                                   <Grid.ColumnDefinitions>
		                                <ColumnDefinition/>
		                                <ColumnDefinition/>
		                            </Grid.ColumnDefinitions>
		                        <Border  Grid.ColumnSpan="2" Background="{TemplateBinding Background}" />
								</Grid>
		                    </ControlTemplate>  
		                </Setter.Value>  
		            </Setter>  
		        </Style>
        <!--水平时的滑块样式-->
        <Style x:Key="Horizontal_SliderThumbStyle" TargetType="{x:Type Thumb}">  
        	        <Setter Property="SnapsToDevicePixels" Value="True" />
					<Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Focusable" Value="false" />
                    <Setter Property="Height" Value="29" />  
		            <Setter Property="Width" Value="38" /> 
		            <Setter Property="Template">  
		                <Setter.Value>  
		                    <ControlTemplate TargetType="{x:Type Thumb}">  
		                    	<Grid>  
		                            <Grid.ColumnDefinitions>  
		                                <ColumnDefinition />  
		                                <ColumnDefinition Width="2.666"/>  
		                            </Grid.ColumnDefinitions>
                                     <Border Grid.ColumnSpan="2"  Background="{StaticResource Horizontalslider_Thumb}" Width="29" Margin="-1.647,-3.604,-22.022,-5.396"/>  
                                 </Grid>       
		                    </ControlTemplate>  
		                </Setter.Value>  
		            </Setter>  
		        </Style> 
		
		<Style x:Key="SpeedSliderStyle" TargetType="{x:Type Slider}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="transparent"/>
			<Setter Property="Width" Value="231"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="SmallChange" Value="1"/>
			<Setter Property="LargeChange" Value="15"/>
			<Setter Property="IsSnapToTickEnabled" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
						        Background="{StaticResource Horizontalslider_backround}"
                                SnapsToDevicePixels="true">
                            <Grid  >
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="30"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="231"/>
                                </Grid.ColumnDefinitions>
								<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
								<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Border x:Name="TrackBackground"  
										 BorderThickness="{TemplateBinding BorderThickness}" 
										 Background="{TemplateBinding Background}"  
										 Width="{TemplateBinding Width}"
										 Height="{TemplateBinding Height}"
										 Grid.Row="1" 
										 VerticalAlignment="Center"
										 HorizontalAlignment="Left" Margin="0,0,0,0" Grid.RowSpan="3"/>
                                <!--Grid.Row="1" 解决了有下边的问题-->
								<Track x:Name="PART_Track" Grid.Row="1" HorizontalAlignment="Left" Width="211" >
									<Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource Horizontal_UpRepeatButtonStyle}" Margin="8,11,-9.417,10.999" d:LayoutOverrides="VerticalMargin"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource Horizontal_DownRepeatButtonStyle}"
                                                      Margin="0,11.125,0,10.875" HorizontalAlignment="Right" Width="198.75">
                                        	<Button Content="Button" Height="0.125" Width="1.125"/>
                                        </RepeatButton>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
                                        <!-- 水平的滑块样式HorizontalSliderThumbStyle-->
										<Thumb x:Name="Thumb" Style="{StaticResource Horizontal_SliderThumbStyle}" HorizontalAlignment="Stretch"   
										Width="Auto"  RenderTransformOrigin="1.816,0.534" Margin="0,0.5,-17.666,0.5"  />
									</Track.Thumb>
								</Track>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="30"/>
			        <Setter Property="Height" Value="231"/>
					<Setter Property="SmallChange" Value="1"/>
					<Setter Property="LargeChange" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Slider}">
                                <!--A 背景-->
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
						        Background="{StaticResource Verticalslider_backround}"
                                SnapsToDevicePixels="true">
                                    <Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="28*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
                                        <!--向上把Slider分成一段一段的，然后每一个段代表一个整数，让Slider仅在这些段中滑动，这个段就是Slider中所谓的”Tick”。-->
										<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
										<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                        <!--垂直Track时的背景-->
                                        <!--BorderBrush采用垂直的VerticalSliderTrackNormalBorder-->
                                        <!--Background采用水平的背景 HorizontalSliderTrackNormalBackground-->
                                       <Border x:Name="TrackBackground"  
										 BorderThickness="{TemplateBinding BorderThickness}" 
										 Background="{TemplateBinding Background}"  
										 Width="{TemplateBinding Width}"
										 Height="{TemplateBinding Height}"
										 Grid.Row="1" 
										 VerticalAlignment="Center"
										 HorizontalAlignment="Left" Margin="0,0,0,0" Grid.RowSpan="3"/>
										<Track x:Name="PART_Track" Grid.Column="0">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource Vertical_UpRepeatButtonStyle}" Margin="11.121,-14.874,0,6.687" RenderTransformOrigin="0.6,0.5" HorizontalAlignment="Left" Width="8">
													<RepeatButton.RenderTransform>
														<TransformGroup>
															<ScaleTransform ScaleY="-1"/>
															<SkewTransform/>
															<RotateTransform/>
															<TranslateTransform/>
														</TransformGroup>
													</RepeatButton.RenderTransform>
												</RepeatButton>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource Vertical_DownRepeatButtonStyle}" Margin="0,2,0,0"/>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
                                                <!--垂直的滑块样式-->
												<Thumb x:Name="Thumb" Style="{StaticResource Vertical_SliderThumbStyle}" 
												        Width="38" VerticalAlignment="Bottom" Height="29" RenderTransformOrigin="-0.8,0.133" Margin="-3.292,0,-4.709,2.626" />
											</Track.Thumb>
										</Track>
									</Grid>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		
        <!--ComboBox-->
        <SolidColorBrush x:Key="TextBoxBorder" Color="#FF7CF1FF"/>
        <SolidColorBrush x:Key="ForegroundBorder" Color="White"/>
        <SolidColorBrush x:Key="NormalBackround" Color="#FF0b1626"/>
        <SolidColorBrush x:Key="SetWindowFocusedBorder"  Color="#FFF6BB42" />
        <SolidColorBrush x:Key="DropDownBorderBrush"  Color="#0e1116" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF7CF1FF" Opacity="0.2"/>

        <ImageBrush x:Key="ButtonNormal"   ImageSource="/Images/ComboBoxIcon/当前机器人_边框.png" Stretch="Fill"  TileMode="None" AlignmentX="Center"  AlignmentY="Center" />
        <ImageBrush x:Key="ButtonMouseOver"   ImageSource="/Images/ComboBoxIcon/下拉菜单及日历年月_按钮_悬浮.png" Stretch="Fill"  TileMode="None" AlignmentX="Center"  AlignmentY="Center" />
        <ImageBrush x:Key="ButtonMouseDown"   ImageSource="/Images/ComboBoxIcon/下拉菜单及日历年月_按钮_正常.png" Stretch="Fill"  TileMode="None" AlignmentX="Center"  AlignmentY="Center" />

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <!--调完后记得改回Background="{TemplateBinding Background}-->
            <Border x:Name="PART_ContentHost"  Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
       
        <SolidColorBrush x:Key="slected_foreground" Color="#FF74F0FE" Opacity="0.4"/>
        <SolidColorBrush x:Key="PopBorderBrush" Color="#FF74F0FE" Opacity="1"/>
       
        <LinearGradientBrush x:Key="Item_background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF184E8C" Offset="0"/>
            <GradientStop Color="#FFEBEBEB"/>
            <GradientStop Color="#FF184E8C"/>
            <GradientStop Color="#FF0B2147" Offset="0.8"/>
        </LinearGradientBrush>
        <ControlTemplate x:Key="ItemTemplateSelector" TargetType="{x:Type TextBox}">
            <Border x:Name="Selected_ContentHost" Width="250" Height="50" 
                    Focusable="False" Background="{StaticResource ResourceKey=Item_background}">
            </Border>
        </ControlTemplate>
        
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Border  Background="Transparent" x:Name="border"  BorderThickness="1" Width="60">
                <Grid >
                    <!--<Image Grid.Column="0" Width="2" Height="35" Source="/Images/ComboBoxIcon/下拉菜单_分隔线.png"/>-->
                    <Image Margin="10" Width="11" Height="6" Source="/Images/ComboBoxIcon/当前机器人_小三角.png"/>
                </Grid>
            </Border>
        </ControlTemplate>
  
            <Style x:Key="DeviceComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Width" Value="298"/>
            <Setter Property="Height" Value="89"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="24"/>
            <!--<Setter Property="ItemContainerStyle" Value="DeviceComboBoxContainerItemStyle"/>-->
            <Setter Property="Background" Value="{StaticResource ButtonNormal}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid  Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="58"/>
                                <ColumnDefinition Width="105"/>
                                <ColumnDefinition Width="105"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" FontSize="24" Foreground="White" Text="机器人:"
                               Margin="25,0,0,5"
                               VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Grid.ColumnSpan="2"
                                          Background="{TemplateBinding Background}"
                                          Template="{DynamicResource ComboBoxToggleButton}" 
                                          x:Name="ToggleButton" Focusable="false" Width="250"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, 
                                RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"  />
                            <ContentPresenter HorizontalAlignment="Center"  Grid.Column="2" 
                                              x:Name="ContentSite" 
                                              VerticalAlignment="Center" 
                                              Margin="0,0,0,8"
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                              IsHitTestVisible="True"/>

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 Style="{x:Null}" -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" Style="{x:Null}"
                                     HorizontalAlignment="Left" Margin="31,3,23,3" x:Name="PART_EditableTextBox"
                                      VerticalAlignment="Center" Focusable="True" Background="Yellow"  
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Width="250" Margin="100,0,0,0"
                                   Placement="Bottom" x:Name="Popup" Focusable="False"  HorizontalOffset="62" VerticalOffset="-20"
                                   AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid  x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"  Width="250" 
                                            Background="{DynamicResource Item_background}" 
                                            BorderBrush="{DynamicResource PopBorderBrush}" BorderThickness="2"/>
                                    <ScrollViewer Margin="2" 
                                                  SnapsToDevicePixels="True" 
                                                  HorizontalScrollBarVisibility="Auto" 
                                                  VerticalScrollBarVisibility="Auto" 
                                                  CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" Width="250"   KeyboardNavigation.DirectionalNavigation="Contained" Background="Transparent"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DeviceComboBoxContainerItemStyle" x:Name="a" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ResourceKey=selected_foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		
		 <Style x:Key="Horizental_SpeedSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="transparent"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Width" Value="231"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="LargeChange" Value="1"/>
        <Setter Property="IsSnapToTickEnabled" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
						        Background="{StaticResource Horizontalslider_backround}"
                                SnapsToDevicePixels="true">
                        <Grid  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="231"/>
                            </Grid.ColumnDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            <Border x:Name="TrackBackground"  
										 BorderThickness="{TemplateBinding BorderThickness}" 
										 Background="{TemplateBinding Background}"  
										 Width="{TemplateBinding Width}"
										 Height="{TemplateBinding Height}"
										 Grid.Row="1" 
										 VerticalAlignment="Center"
										 HorizontalAlignment="Left" Margin="0,0,0,0" Grid.RowSpan="3"/>
                            <!--Grid.Row="1" 解决了有下边的问题-->
                            <Track x:Name="PART_Track" Grid.Row="1" HorizontalAlignment="Left" Width="211" >
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource Horizontal_UpRepeatButtonStyle}" Margin="8,11,-9.417,10.999" d:LayoutOverrides="VerticalMargin"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource Horizontal_DownRepeatButtonStyle}"
                                                      Margin="0,11.125,0,10.875" HorizontalAlignment="Right" Width="198.75">
                                        <Button Content="Button" Height="0.125" Width="1.125"/>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <!-- 水平的滑块样式HorizontalSliderThumbStyle-->
                                    <Thumb x:Name="Thumb" Style="{StaticResource Horizontal_SliderThumbStyle}" HorizontalAlignment="Stretch"   
										Width="Auto"  RenderTransformOrigin="1.816,0.534" Margin="0,0.5,-17.666,0.5"  />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    </Window.Resources>

	<Grid x:Name="LayoutRoot" Background="#FF2A2A52" >
        <ComboBox x:Name="NameList" HorizontalAlignment="Left" Margin="74,54,0,0"  
                  Style="{DynamicResource DeviceComboBoxStyle}">
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="40"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="Cornsilk" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Slider HorizontalAlignment="Right" Margin="0,168,284,0" VerticalAlignment="Top" Style="{DynamicResource Horizental_SpeedSliderStyle }"/>
       
	</Grid>
</Window>